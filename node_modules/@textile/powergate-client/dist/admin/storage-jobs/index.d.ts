import { grpc } from "@improbable-eng/grpc-web";
import { ListStorageJobsResponse, StorageJobsSummaryResponse } from "@textile/grpc-powergate-client/dist/powergate/admin/v1/admin_pb";
import { Config } from "../../types";
import { AdminListOptions } from "./types";
export { AdminListOptions };
export interface AdminStorageJobs {
    /**
     * Lists StorageJobs according to the provided ListOptions.
     * @param opts Optional ListOptions to control the behavior of listing jobs.
     * @returns An object containing a list of storage jobs.
     */
    list: (opts?: AdminListOptions) => Promise<ListStorageJobsResponse.AsObject>;
    /**
     * Get a summary of all jobs.
     * @param userId The user id to query or undefined for all users.
     * @param cids An optional cid to fileter the results with.
     * @returns A summary of all jobs.
     */
    summary: (userId?: string, cid?: string) => Promise<StorageJobsSummaryResponse.AsObject>;
}
/**
 * @ignore
 */
export declare const createStorageJobs: (config: Config, getMeta: () => grpc.Metadata) => AdminStorageJobs;
