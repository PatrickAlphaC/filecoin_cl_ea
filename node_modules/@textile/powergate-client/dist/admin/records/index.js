"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRecords = void 0;
const admin_pb_1 = require("@textile/grpc-powergate-client/dist/powergate/admin/v1/admin_pb");
const admin_pb_service_1 = require("@textile/grpc-powergate-client/dist/powergate/admin/v1/admin_pb_service");
const timestamp_pb_1 = require("google-protobuf/google/protobuf/timestamp_pb");
const util_1 = require("../../util");
/**
 * @ignore
 */
const createRecords = (config, getMeta) => {
    const client = new admin_pb_service_1.AdminServiceClient(config.host, config);
    return {
        getUpdatedRetrievalRecordsSince: (time, limit) => {
            const req = new admin_pb_1.GetUpdatedRetrievalRecordsSinceRequest();
            const since = new timestamp_pb_1.Timestamp();
            since.fromDate(time);
            req.setSince(since);
            req.setLimit(limit);
            return util_1.promise((cb) => client.getUpdatedRetrievalRecordsSince(req, getMeta(), cb), (resp) => resp.toObject());
        },
        getUpdatedStorageDealRecordsSince: (time, limit) => {
            const req = new admin_pb_1.GetUpdatedStorageDealRecordsSinceRequest();
            const since = new timestamp_pb_1.Timestamp();
            since.fromDate(time);
            req.setSince(since);
            req.setLimit(limit);
            return util_1.promise((cb) => client.getUpdatedStorageDealRecordsSince(req, getMeta(), cb), (resp) => resp.toObject());
        },
    };
};
exports.createRecords = createRecords;
//# sourceMappingURL=index.js.map