"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createWallet = void 0;
const user_pb_1 = require("@textile/grpc-powergate-client/dist/powergate/user/v1/user_pb");
const user_pb_service_1 = require("@textile/grpc-powergate-client/dist/powergate/user/v1/user_pb_service");
const util_1 = require("../util");
/**
 * @ignore
 */
const createWallet = (config, getMeta) => {
    const client = new user_pb_service_1.UserServiceClient(config.host, config);
    return {
        balance: (address) => {
            const req = new user_pb_1.BalanceRequest();
            req.setAddress(address);
            return util_1.promise((cb) => client.balance(req, getMeta(), cb), (res) => res.toObject());
        },
        newAddress: (name, type, makeDefault) => {
            const req = new user_pb_1.NewAddressRequest();
            req.setName(name);
            req.setAddressType(type || "bls");
            req.setMakeDefault(makeDefault || false);
            return util_1.promise((cb) => client.newAddress(req, getMeta(), cb), (res) => res.toObject());
        },
        addresses: () => util_1.promise((cb) => client.addresses(new user_pb_1.AddressesRequest(), getMeta(), cb), (res) => res.toObject()),
        sendFil: (from, to, amount) => {
            const req = new user_pb_1.SendFilRequest();
            req.setFrom(from);
            req.setTo(to);
            req.setAmount(amount.toString());
            return util_1.promise((cb) => client.sendFil(req, getMeta(), cb), (res) => res.toObject());
        },
        signMessage: (address, message) => {
            const req = new user_pb_1.SignMessageRequest();
            req.setAddress(address);
            req.setMessage(message);
            return util_1.promise((cb) => client.signMessage(req, getMeta(), cb), (res) => res.toObject());
        },
        verifyMessage: (address, message, signature) => {
            const req = new user_pb_1.VerifyMessageRequest();
            req.setAddress(address);
            req.setMessage(message);
            req.setSignature(signature);
            return util_1.promise((cb) => client.verifyMessage(req, getMeta(), cb), (res) => res.toObject());
        },
    };
};
exports.createWallet = createWallet;
//# sourceMappingURL=index.js.map