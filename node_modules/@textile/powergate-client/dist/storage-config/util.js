"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hotObjToMessage = exports.coldObjToMessage = void 0;
const user_pb_1 = require("@textile/grpc-powergate-client/dist/powergate/user/v1/user_pb");
function coldObjToMessage(obj) {
    const cold = new user_pb_1.ColdConfig();
    cold.setEnabled(obj.enabled);
    if (obj.filecoin) {
        const fc = new user_pb_1.FilConfig();
        fc.setAddress(obj.filecoin.address);
        fc.setCountryCodesList(obj.filecoin.countryCodesList);
        fc.setDealMinDuration(obj.filecoin.dealMinDuration);
        fc.setExcludedMinersList(obj.filecoin.excludedMinersList);
        fc.setMaxPrice(obj.filecoin.maxPrice);
        fc.setReplicationFactor(obj.filecoin.replicationFactor);
        fc.setTrustedMinersList(obj.filecoin.trustedMinersList);
        if (obj.filecoin.renew) {
            const renew = new user_pb_1.FilRenew();
            renew.setEnabled(obj.filecoin.renew.enabled);
            renew.setThreshold(obj.filecoin.renew.threshold);
            fc.setRenew(renew);
        }
        cold.setFilecoin(fc);
    }
    return cold;
}
exports.coldObjToMessage = coldObjToMessage;
function hotObjToMessage(obj) {
    const hot = new user_pb_1.HotConfig();
    hot.setAllowUnfreeze(obj.allowUnfreeze);
    hot.setEnabled(obj.enabled);
    if (obj === null || obj === void 0 ? void 0 : obj.ipfs) {
        const ipfs = new user_pb_1.IpfsConfig();
        ipfs.setAddTimeout(obj.ipfs.addTimeout);
        hot.setIpfs(ipfs);
    }
    return hot;
}
exports.hotObjToMessage = hotObjToMessage;
//# sourceMappingURL=util.js.map