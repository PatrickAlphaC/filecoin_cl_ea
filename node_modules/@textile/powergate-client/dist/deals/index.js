"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDeals = void 0;
const user_pb_1 = require("@textile/grpc-powergate-client/dist/powergate/user/v1/user_pb");
const user_pb_service_1 = require("@textile/grpc-powergate-client/dist/powergate/user/v1/user_pb_service");
const util_1 = require("../util");
/**
 * @ignore
 */
const createDeals = (config, getMeta) => {
    const client = new user_pb_service_1.UserServiceClient(config.host, config);
    return {
        storageDealRecords: (opts = {}) => {
            const req = new user_pb_1.StorageDealRecordsRequest();
            req.setConfig(listDealRecordsOptionsToConfig(opts));
            return util_1.promise((cb) => client.storageDealRecords(req, getMeta(), cb), (res) => res.toObject());
        },
        retrievalDealRecords: (opts = {}) => {
            const req = new user_pb_1.RetrievalDealRecordsRequest();
            req.setConfig(listDealRecordsOptionsToConfig(opts));
            return util_1.promise((cb) => client.retrievalDealRecords(req, getMeta(), cb), (res) => res.toObject());
        },
    };
};
exports.createDeals = createDeals;
function listDealRecordsOptionsToConfig(opts) {
    const conf = new user_pb_1.DealRecordsConfig();
    if (opts.ascending) {
        conf.setAscending(opts.ascending);
    }
    if (opts.dataCids) {
        conf.setDataCidsList(opts.dataCids);
    }
    if (opts.fromAddresses) {
        conf.setFromAddrsList(opts.fromAddresses);
    }
    if (opts.includeFinal) {
        conf.setIncludeFinal(opts.includeFinal);
    }
    if (opts.includePending) {
        conf.setIncludePending(opts.includePending);
    }
    return conf;
}
//# sourceMappingURL=index.js.map